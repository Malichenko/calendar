{"version":3,"sources":["Share/Components/Pickers/Styles.module.scss","Bus/Calendar/Components/CalendarGrid/Styles.module.scss","Layouts/Scheduler/Styles.module.scss","Bus/Calendar/eventsTypes.ts","Bus/Calendar/reducer.ts","Init/rootReducer.ts","Init/middleware.ts","Init/store.ts","Share/Components/Pickers/ThemeStyle.ts","Share/Components/Pickers/DatePicker/View.tsx","Constants/pickers.ts","Bus/Calendar/Components/CalendarGrid/Elements/Events/View.tsx","Bus/Calendar/Hooks/useEvents.ts","Share/Components/Pickers/TimePicker/View.tsx","Bus/Calendar/Components/ModalAdapter/Components/Form/initialValues.ts","Bus/Calendar/actions.ts","Bus/Calendar/Components/ModalAdapter/Components/Form/validationSchema.ts","Bus/Calendar/Components/ModalAdapter/Components/Form/Theme.ts","Bus/Calendar/Components/ModalAdapter/Components/Form/View.tsx","Bus/Calendar/Hooks/useForm.ts","Bus/Calendar/Components/ModalAdapter/View.tsx","Bus/Calendar/Hooks/useHandlers.ts","Bus/Calendar/Components/CalendarGrid/View.tsx","Bus/Calendar/Hooks/useSelectedEvent.ts","Bus/Calendar/Hooks/useValues.ts","Bus/Calendar/Hooks/useQuery.ts","Bus/Calendar/Hooks/useFilter.ts","Utils/prev_month.ts","Utils/next_month.ts","Constants/calendar.ts","Bus/Calendar/View/View.tsx","Bus/Calendar/Hooks/useInitialEvents.ts","Bus/Calendar/Hooks/useNewEvent.ts","Layouts/Scheduler/Scheduler.tsx","index.tsx","Bus/Calendar/View/Styles.module.scss","Bus/Calendar/Components/ModalAdapter/Styles.module.scss"],"names":["module","exports","types","Object","freeze","EVENT_ADD","EVENT_SUB","EVENT_SELECTED","EVENT_EDIT_SELECTED","EVENT_START_FETCHING","EVENT_STOP_FETCHING","EVENT_SET_FETCHING_ERROR","initialState","events","event","isLoading","error","rootReducer","combineReducers","eventReducer","state","type","payload","profile","status","composeEnhancers","createLogger","duration","collapsed","colors","title","action","prevState","nextState","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","store","createStore","applyMiddleware","fz","materialTheme","createMuiTheme","overrides","MuiPaper","root","backgroundColor","MuiPickersToolbar","toolbar","MuiPickersCalendarHeader","transitionContainer","fontSize","dayLabel","color","switchHeader","iconButton","MuiPickersYear","yearSelected","MuiTypography","body2","h4","subtitle1","MuiPickersDay","day","daySelected","dayDisabled","current","MuiPickersModal","dialogAction","MuiFormLabel","MuiInput","underline","borderBottom","MuiPickersClock","pin","MuiPickersClockPointer","pointer","thumb","borderColor","noPoint","MuiPickersClockNumber","clockNumber","View","isOpen","setIsOpen","selectedDate","Date","handleDateChange","onlyIcon","label","setFieldValue","utils","DateFnsUtils","IconButton","aria-label","onClick","className","cx","Styles","ThemeProvider","theme","DatePicker","variant","open","onOpen","onClose","format","value","onChange","date","InputProps","endAdornment","InputAdornment","position","eventsDateArr","eventClickHolder","keyOfEvents","findEvents","find","isSameDay","useEvents","eventsArr","hasOwnProperty","eventsJSX","map","el","idx","id","data-date","e","TimePicker","initialValues","description","time","eventActions","startFetching","stopFetching","setFetchingError","add","sub","selectEvent","editSelectedEvent","getEvents","dispatch","a","data","localStorage","getItem","parsedDate","JSON","parse","console","message","getEvent","key","parsedStorageDate","dailyEventsArr","findEvent","editEvent","newKey","oldKey","keys","reduce","acc","findIndex","filteredArr","filter","length","push","indexOfEvent","setItem","stringify","createEvent","parsedPayloadData","shortid","generate","eventKeyArr","eventKey","join","isEventExist","some","processedDate","deleteEvent","findById","validationSchema","Yup","shape","required","MuiFormControl","width","paddingBottom","marginBottom","MuiFormHelperText","top","left","MuiLinearProgress","barColorPrimary","MuiInputAdornment","fill","MuiFormGroup","justifyContent","margin","names","_event","useSelector","useDispatch","useState","isDatePickerOpen","toggleDatePicker","isTimePickerOpen","toggleTimePicker","toggleSelectedDate","selectedTime","toggleSelectedTime","handleTimeChange","handleSubmit","values","handleDelete","useForm","onSubmit","setSubmitting","setTimeout","submitForm","isSubmitting","component","TextField","name","autoComplete","placeholder","multiline","FormGroup","row","LinearProgress","style","display","alignItems","Button","size","disabled","startIcon","isModalOpen","handleClose","heading","Modal","aria-labelledby","aria-describedby","modal","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","modal__paper","modal__header","Typography","modal__main","useHandlers","setSelectedDate","setPrevMonth","prev","months","setNextMonth","handleGridClick","target","currentTarget","dataset","prevMonthArr","selectedMonthArr","nextMonthArr","selectedDay","toggleModalOpen","useSelectedEvent","grid__date","String","getTime","useValues","query","URLSearchParams","useLocation","search","queryDate","get","history","useHistory","useEffect","pathname","useFilter","getDate","startOfSelectedMonth","startOfMonth","endOfSelectedMonth","lastDayOfMonth","eachDayOfInterval","start","end","prevMonth","month","num","daysInMonth","getDaysInMonth","arr","i","getYear","getMonth","getPrevMonthArr","getDay","daysCount","nextMonth","getNextMonthArr","useInitialEvents","toggleModal","handleOpen","useNewEvent","calendar","Scheduler","container","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.30ca45db.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"hidden\":\"Styles_hidden__1ZSxg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid__date\":\"Styles_grid__date__Sf6A1\",\"grid__date--prev\":\"Styles_grid__date--prev__3OKHL\",\"grid__date--next\":\"Styles_grid__date--next__22Lci\",\"grid__date--selected\":\"Styles_grid__date--selected__m55zO\",\"grid\":\"Styles_grid__1-VyO\",\"grid--today\":\"Styles_grid--today__3JPMS\",\"grid__header\":\"Styles_grid__header__1N_iw\",\"grid__day\":\"Styles_grid__day__nlT09\",\"grid__day--today\":\"Styles_grid__day--today__1Kl4S\",\"grid__list\":\"Styles_grid__list__2BoiG\",\"grid__item\":\"Styles_grid__item__3VLnA\",\"grid__item--active\":\"Styles_grid__item--active__3pzIV\",\"grid__item-title\":\"Styles_grid__item-title__3Cs5x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Styles_container__1jLsn\"};","// -----------------------------------------------------------------------------\n// Deps\n// -----------------------------------------------------------------------------\nimport { TTypes } from './Types';\n// -----------------------------------------------------------------------------\n// Types\n// -----------------------------------------------------------------------------\nexport const types: TTypes = Object.freeze({\n\tEVENT_ADD: 'EVENT_ADD',\n\tEVENT_SUB: 'EVENT_SUB',\n\tEVENT_SELECTED: 'EVENT_SELECTED',\n\tEVENT_EDIT_SELECTED: 'EVENT_EDIT_SELECTED',\n\tEVENT_START_FETCHING: 'EVENT_START_FETCHING',\n\tEVENT_STOP_FETCHING: 'EVENT_STOP_FETCHING',\n\tEVENT_SET_FETCHING_ERROR: 'EVENT_SET_FETCHING_ERROR'\n});\n","// -----------------------------------------------------------------------------\n// Deps\n// -----------------------------------------------------------------------------\n// Type Names\nimport { types } from './eventsTypes';\n// Types\nimport { IEventPayload, TEventState } from './Types';\n// -----------------------------------------------------------------------------\n// Initial State\n// -----------------------------------------------------------------------------\nconst initialState: TEventState = {\n\tevents: null,\n\tevent: null,\n\tisLoading: false,\n\terror: null\n};\n// -----------------------------------------------------------------------------\n// Reducer\n// -----------------------------------------------------------------------------\nexport const eventReducer = (\n\tstate: TEventState = initialState,\n\t{ type, payload }: { type: string; payload: IEventPayload }\n) => {\n\tswitch (type) {\n\t\tcase types.EVENT_START_FETCHING:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoading: true\n\t\t\t};\n\t\tcase types.EVENT_STOP_FETCHING:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoading: false\n\t\t\t};\n\t\tcase types.EVENT_SET_FETCHING_ERROR:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoading: false,\n\t\t\t\tprofile: null,\n\t\t\t\terror: payload.status\n\t\t\t};\n\t\tcase types.EVENT_ADD:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\terror: null,\n\t\t\t\tevents: payload\n\t\t\t};\n\t\tcase types.EVENT_SUB:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\terror: null,\n\t\t\t\tevents: payload\n\t\t\t};\n\t\tcase types.EVENT_SELECTED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\terror: null,\n\t\t\t\tevent: payload\n\t\t\t};\n\t\tcase types.EVENT_EDIT_SELECTED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\terror: null,\n\t\t\t\tevents: payload\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","// -----------------------------------------------------------------------------\n// Deps\n// -----------------------------------------------------------------------------\n// Core\nimport { combineReducers } from 'redux';\n// Reducers\nimport { eventReducer } from 'Bus/Calendar/reducer';\n// -----------------------------------------------------------------------------\n// Current\n// -----------------------------------------------------------------------------\nexport type TRootReducer = ReturnType<typeof rootReducer>;\n// -----------------------------------------------------------------------------\n// Root Reducer\n// -----------------------------------------------------------------------------\nexport const rootReducer = combineReducers({\n\teventReducer\n});\n","// -----------------------------------------------------------------------------\n// Deps\n// -----------------------------------------------------------------------------\n// Core\nimport { AnyAction, compose, Dispatch, Middleware } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\n// -----------------------------------------------------------------------------\n// Middleware\n// -----------------------------------------------------------------------------\ndeclare global {\n\tinterface Window {\n\t\t__REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n\t}\n}\n\nexport const logger = createLogger({\n\tduration: true,\n\tcollapsed: true,\n\tcolors: {\n\t\ttitle: (action) => {\n\t\t\treturn action.error ? 'firebrick' : 'deepskyblue';\n\t\t},\n\t\tprevState: () => '#1C5FAF',\n\t\taction: () => '#149945',\n\t\tnextState: () => '#A47104',\n\t\terror: () => '#ff0005'\n\t}\n});\n\nconst developmentEnvironment = process.env.NODE_ENV === 'development';\nconst devtools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\nconst composeEnhancers = developmentEnvironment && devtools ? devtools : compose;\n\nconst middleware: Middleware<{}, any, Dispatch<AnyAction>>[] = [thunk];\n\nif (developmentEnvironment) {\n\tmiddleware.push(logger);\n}\n\nexport { composeEnhancers, middleware };\n","// -----------------------------------------------------------------------------\n// Deps\n// -----------------------------------------------------------------------------\n// Core\nimport { createStore, applyMiddleware } from 'redux';\n// Other\nimport { rootReducer } from './rootReducer';\nimport { middleware, composeEnhancers } from './middleware';\n// -----------------------------------------------------------------------------\n// Store\n// -----------------------------------------------------------------------------\nexport const store = createStore(\n\trootReducer,\n\tcomposeEnhancers(applyMiddleware(...middleware))\n);\n\n\n\n\n","// -----------------------------------------------------------------------------\n// Deps\n// -----------------------------------------------------------------------------\nimport { createMuiTheme, Theme } from '@material-ui/core';\n// -----------------------------------------------------------------------------\n// Theme\n// -----------------------------------------------------------------------------\nconst fz = '1.4rem';\nexport const materialTheme: Theme = createMuiTheme({\n\toverrides: {\n\t\tMuiPaper: {\n\t\t\troot: {\n\t\t\t\tbackgroundColor: 'var(--primary)'\n\t\t\t}\n\t\t},\n\t\t// @ts-ignore\n\t\tMuiPickersToolbar: {\n\t\t\ttoolbar: {\n\t\t\t\tbackgroundColor: 'var(--secondary)'\n\t\t\t}\n\t\t},\n\t\tMuiPickersCalendarHeader: {\n\t\t\ttransitionContainer: {\n\t\t\t\t'& p': {\n\t\t\t\t\tfontSize: fz\n\t\t\t\t}\n\t\t\t},\n\t\t\tdayLabel: {\n\t\t\t\tcolor: 'var(--text-color-main)',\n\t\t\t\tfontSize: fz\n\t\t\t},\n\t\t\tswitchHeader: {\n\t\t\t\tcolor: 'var(--text-color-main)'\n\t\t\t},\n\t\t\ticonButton: {\n\t\t\t\tbackgroundColor: 'var(--primary)',\n\t\t\t\tcolor: 'var(--text-color-main)'\n\t\t\t}\n\t\t},\n\t\tMuiPickersYear: {\n\t\t\troot: {\n\t\t\t\tcolor: 'var(--text-color-main)'\n\t\t\t},\n\t\t\tyearSelected: {\n\t\t\t\tcolor: 'var(--secondary)'\n\t\t\t}\n\t\t},\n\t\tMuiTypography: {\n\t\t\tbody2: {\n\t\t\t\tfontSize: '1.2rem'\n\t\t\t},\n\t\t\th4: {\n\t\t\t\tfontSize: '1.6rem'\n\t\t\t},\n\t\t\tsubtitle1: {\n\t\t\t\tfontSize: fz\n\t\t\t}\n\t\t},\n\t\tMuiPickersDay: {\n\t\t\tday: {\n\t\t\t\tcolor: 'var(--text-color-main)'\n\t\t\t},\n\t\t\tdaySelected: {\n\t\t\t\tbackgroundColor: 'var(--secondary)'\n\t\t\t},\n\t\t\tdayDisabled: {\n\t\t\t\tcolor: 'rgba(0,0,0, .5)'\n\t\t\t},\n\t\t\tcurrent: {\n\t\t\t\tcolor: 'var(--secondary)',\n\t\t\t\tbackgroundColor: 'var(--secondary-dark)'\n\t\t\t}\n\t\t},\n\t\tMuiPickersModal: {\n\t\t\tbackgroundColor: 'var(--primary)',\n\t\t\tdialogAction: {\n\t\t\t\tcolor: 'var(--text-color-main)'\n\t\t\t}\n\t\t},\n\t\tMuiFormLabel: {\n\t\t\troot: {\n\t\t\t\tcolor: 'var(--text-color-main)',\n\t\t\t\tfontSize: fz,\n\t\t\t\t'&.Mui-focused:not(.Mui-error)': {\n\t\t\t\t\tcolor: ' var(--secondary)'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tMuiInput: {\n\t\t\troot: {\n\t\t\t\tfontSize: fz\n\t\t\t},\n\t\t\tunderline: {\n\t\t\t\t'&:hover:not(.Mui-disabled):before': {\n\t\t\t\t\tborderBottom: '2px solid var(--secondary)'\n\t\t\t\t},\n\t\t\t\t'&:after': {\n\t\t\t\t\tborderBottom: '1px solid var(--secondary)'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tMuiPickersClock: {\n\t\t\tpin: {\n\t\t\t\tbackgroundColor: 'var(--secondary)'\n\t\t\t}\n\t\t},\n\t\tMuiPickersClockPointer: {\n\t\t\tpointer: {\n\t\t\t\tbackgroundColor: 'var(--secondary)'\n\t\t\t},\n\t\t\tthumb: {\n\t\t\t\tborderColor: 'var(--secondary)'\n\t\t\t},\n\t\t\tnoPoint: {\n\t\t\t\tbackgroundColor: 'var(--secondary)'\n\t\t\t}\n\t\t},\n\n\t\tMuiPickersClockNumber: {\n\t\t\tclockNumber: {\n\t\t\t\tcolor: 'var(--text-color-main)'\n\t\t\t}\n\t\t}\n\t}\n});\n","// -----------------------------------------------------------------------------\n// Deps\n// -----------------------------------------------------------------------------\n// Core\nimport React from 'react';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { IconButton, InputAdornment } from '@material-ui/core';\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\nimport { DatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport { materialTheme } from '../ThemeStyle';\nimport cx from 'classnames';\nimport { ThemeProvider } from '@material-ui/styles';\n// Utils\nimport { DATE } from 'Constants/pickers';\n// Styles\nimport Styles from '../Styles.module.scss';\n// Types\nimport { IPickersProps } from '../Types';\n// -----------------------------------------------------------------------------\n// View\n// -----------------------------------------------------------------------------\nexport const View: React.FC<IPickersProps> = ({\n\tisOpen,\n\tsetIsOpen,\n\tselectedDate = new Date(),\n\thandleDateChange,\n\tonlyIcon,\n\tlabel = 'Date',\n\tsetFieldValue\n}) => {\n\tconst handler = (date: Date | null) => {\n\t\thandleDateChange(date);\n\t\tif (setFieldValue) {\n\t\t\tsetFieldValue(DATE, date);\n\t\t}\n\t};\n\n\treturn (\n\t\t<MuiPickersUtilsProvider utils={DateFnsUtils}>\n\t\t\t{onlyIcon && (\n\t\t\t\t<IconButton\n\t\t\t\t\tcolor=\"default\"\n\t\t\t\t\taria-label=\"add to shopping cart\"\n\t\t\t\t\tonClick={() => setIsOpen(true)}\n\t\t\t\t>\n\t\t\t\t\t<CalendarTodayIcon fontSize=\"large\" />\n\t\t\t\t</IconButton>\n\t\t\t)}\n\n\t\t\t<div\n\t\t\t\tclassName={cx({\n\t\t\t\t\t[Styles['hidden']]: onlyIcon\n\t\t\t\t})}\n\t\t\t>\n\t\t\t\t<ThemeProvider theme={materialTheme}>\n\t\t\t\t\t<DatePicker\n\t\t\t\t\t\tvariant=\"inline\"\n\t\t\t\t\t\topen={isOpen}\n\t\t\t\t\t\tlabel={label}\n\t\t\t\t\t\tonOpen={() => setIsOpen(true)}\n\t\t\t\t\t\tonClose={() => setIsOpen(false)}\n\t\t\t\t\t\tformat=\"d MMM yyyy\"\n\t\t\t\t\t\tvalue={selectedDate}\n\t\t\t\t\t\tonChange={handler}\n\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\tendAdornment: (\n\t\t\t\t\t\t\t\t<InputAdornment position=\"start\">\n\t\t\t\t\t\t\t\t\t<CalendarTodayIcon fontSize=\"large\" />\n\t\t\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</ThemeProvider>\n\t\t\t</div>\n\t\t</MuiPickersUtilsProvider>\n\t);\n};\n","export const TIME = 'time';\nexport const DATE = 'date';\n","// -----------------------------------------------------------------------------\n// Deps\n// -----------------------------------------------------------------------------\n// Core\nimport React from 'react';\n// Hooks\nimport { useEvents } from 'Bus/Calendar/Hooks/useEvents';\n// Styles\nimport Styles from '../../Styles.module.scss';\n// Types\nimport { IEventsProps } from 'Bus/Calendar/Types';\n// -----------------------------------------------------------------------------\n// View\n// -----------------------------------------------------------------------------\nexport const View: React.FC<IEventsProps> = ({\n\tday,\n\tevents,\n\teventsDateArr,\n\teventClickHolder\n}) => {\n\tconst { keyOfEvents } = useEvents({ day, eventsDateArr });\n\n\tconst eventsArr =\n\t\tevents &&\n\t\tkeyOfEvents &&\n\t\tevents.hasOwnProperty(keyOfEvents) &&\n\t\tevents[keyOfEvents];\n\n\tconst eventsJSX = eventsArr\n\t\t? eventsArr.map((el, idx) => {\n\t\t\t\treturn (\n\t\t\t\t\t<li\n\t\t\t\t\t\tkey={el.id}\n\t\t\t\t\t\tid={el.id}\n\t\t\t\t\t\tdata-date={keyOfEvents}\n\t\t\t\t\t\tclassName={Styles['grid__item']}\n\t\t\t\t\t\tonClick={(e) => eventClickHolder(e)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<span className={Styles['grid__item-title']}>{`${idx + 1}. ${\n\t\t\t\t\t\t\tel.title\n\t\t\t\t\t\t}`}</span>\n\t\t\t\t\t</li>\n\t\t\t\t);\n\t\t  })\n\t\t: null;\n\n\treturn <ul className={Styles['grid__list']}>{eventsJSX}</ul>;\n};\n","// -----------------------------------------------------------------------------\n// Deps\n// -----------------------------------------------------------------------------\n// Core\nimport { format, isSameDay } from 'date-fns';\n// Types\nimport { IUseEventsProps } from '../Types';\n// -----------------------------------------------------------------------------\n// Hook\n// -----------------------------------------------------------------------------\nexport const useEvents = ({ day, eventsDateArr }: IUseEventsProps) => {\n\tconst findEvents = eventsDateArr?.find((date) => isSameDay(date, day));\n\tconst keyOfEvents = findEvents && format(findEvents, 'P');\n\n\treturn {\n\t\tkeyOfEvents\n\t};\n};\n","// -----------------------------------------------------------------------------\n// Deps\n// -----------------------------------------------------------------------------\n// Core\nimport React from 'react';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { IconButton, InputAdornment } from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport { MuiPickersUtilsProvider, TimePicker } from '@material-ui/pickers';\nimport { materialTheme } from '../ThemeStyle';\nimport cx from 'classnames';\nimport { ThemeProvider } from '@material-ui/styles';\n// Urils\nimport { TIME } from 'Constants/pickers';\n// Styles\nimport Styles from '../Styles.module.scss';\n// Types\nimport { IPickersProps } from '../Types';\n// -----------------------------------------------------------------------------\n// View\n// -----------------------------------------------------------------------------\nexport const View: React.FC<IPickersProps> = ({\n\tisOpen,\n\tsetIsOpen,\n\tselectedDate,\n\thandleDateChange,\n\tonlyIcon,\n\tlabel = 'Time',\n\tsetFieldValue,\n}) => {\n\tconst handler = (date: Date | null) => {\n\t\thandleDateChange(date);\n\t\tif (setFieldValue) {\n\t\t\tsetFieldValue(TIME, date);\n\t\t}\n\t};\n\n\treturn (\n\t\t<MuiPickersUtilsProvider utils={DateFnsUtils}>\n\t\t\t{onlyIcon && (\n\t\t\t\t<IconButton\n\t\t\t\t\tcolor=\"default\"\n\t\t\t\t\taria-label=\"add to shopping cart\"\n\t\t\t\t\tonClick={() => setIsOpen(true)}\n\t\t\t\t>\n\t\t\t\t\t<AccessTimeIcon fontSize=\"large\" />\n\t\t\t\t</IconButton>\n\t\t\t)}\n\n\t\t\t<div\n\t\t\t\tclassName={cx({\n\t\t\t\t\t[Styles['hidden']]: onlyIcon\n\t\t\t\t})}\n\t\t\t>\n\t\t\t\t<ThemeProvider theme={materialTheme}>\n\t\t\t\t\t<TimePicker\n\t\t\t\t\t\tvariant=\"inline\"\n\t\t\t\t\t\topen={isOpen}\n\t\t\t\t\t\tlabel={label}\n\t\t\t\t\t\tonOpen={() => setIsOpen(true)}\n\t\t\t\t\t\tonClose={() => setIsOpen(false)}\n\t\t\t\t\t\tvalue={selectedDate}\n\t\t\t\t\t\tonChange={handler}\n\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\tendAdornment: (\n\t\t\t\t\t\t\t\t<InputAdornment position=\"start\">\n\t\t\t\t\t\t\t\t\t<AccessTimeIcon fontSize=\"large\" />\n\t\t\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</ThemeProvider>\n\t\t\t</div>\n\t\t</MuiPickersUtilsProvider>\n\t);\n};\n","// -----------------------------------------------------------------------------\n// Deps\n// -----------------------------------------------------------------------------\nimport { IInitialValues } from '../../../../Types';\n// -----------------------------------------------------------------------------\n// Initial Values\n// -----------------------------------------------------------------------------\nexport const initialValues: IInitialValues = Object.freeze({\n\ttitle: '',\n\tdescription: '',\n\tdate: new Date(),\n\ttime: new Date()\n});\n","// -----------------------------------------------------------------------------\n// Deps\n// -----------------------------------------------------------------------------\n// Types\nimport { types } from './eventsTypes';\nimport { format } from 'date-fns';\nimport shortid from 'shortid';\nimport { IEventInit, IEventPayload, IInitialValues, TEvent, TEvents } from './Types';\nimport { Dispatch } from 'redux';\n// -----------------------------------------------------------------------------\n// Actions\n// -----------------------------------------------------------------------------\nexport const eventActions = Object.freeze({\n\t//Sync\n\tstartFetching: () => {\n\t\treturn {\n\t\t\ttype: types.EVENT_START_FETCHING\n\t\t};\n\t},\n\tstopFetching: () => {\n\t\treturn {\n\t\t\ttype: types.EVENT_STOP_FETCHING\n\t\t};\n\t},\n\tsetFetchingError: (error: string) => {\n\t\treturn {\n\t\t\ttype: types.EVENT_SET_FETCHING_ERROR,\n\t\t\terror: true,\n\t\t\tpayload: error\n\t\t};\n\t},\n\tadd: (payload: IEventPayload) => {\n\t\treturn {\n\t\t\ttype: types.EVENT_ADD,\n\t\t\tpayload\n\t\t};\n\t},\n\tsub: (payload: IEventPayload) => {\n\t\treturn {\n\t\t\ttype: types.EVENT_SUB,\n\t\t\tpayload\n\t\t};\n\t},\n\tselectEvent: (payload: TEvent | null) => {\n\t\treturn {\n\t\t\ttype: types.EVENT_SELECTED,\n\t\t\tpayload\n\t\t};\n\t},\n\teditSelectedEvent: (payload: TEvents) => {\n\t\treturn {\n\t\t\ttype: types.EVENT_EDIT_SELECTED,\n\t\t\tpayload\n\t\t};\n\t},\n\t// Async\n\t//TODO: тут есть возможность переопределить на запросы\n\tgetEvents: () => async (dispatch: Dispatch<any>) => {\n\t\tdispatch(eventActions.startFetching());\n\n\t\ttry {\n\t\t\tconst data = localStorage.getItem('events');\n\t\t\tconst parsedDate = data ? JSON.parse(data) : null;\n\t\t\tif (parsedDate) {\n\t\t\t\tdispatch(eventActions.add(parsedDate));\n\t\t\t} else {\n\t\t\t\t//\tпроврку на ошибки запроса\n\t\t\t\t// const error = {\n\t\t\t\t// \tstatus: response.status,\n\t\t\t\t// };\n\t\t\t\t// dispatch(userActions.setFetchingError(error));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error(error.message);\n\t\t} finally {\n\t\t\tdispatch(eventActions.stopFetching());\n\t\t}\n\t},\n\tgetEvent: (payload: IEventInit | null) => async (dispatch: Dispatch<any>) => {\n\t\tdispatch(eventActions.startFetching());\n\t\tif (payload !== null) {\n\t\t\tconst { key, id } = payload;\n\t\t\ttry {\n\t\t\t\tconst data = localStorage.getItem('events');\n\t\t\t\tconst parsedStorageDate: TEvents = data ? JSON.parse(data) : null;\n\n\t\t\t\tif (parsedStorageDate && parsedStorageDate.hasOwnProperty(key)) {\n\t\t\t\t\tconst dailyEventsArr = parsedStorageDate[key];\n\t\t\t\t\tconst findEvent = dailyEventsArr.find((event) => event.id === id);\n\t\t\t\t\tif (findEvent) dispatch(eventActions.selectEvent(findEvent));\n\t\t\t\t} else {\n\t\t\t\t\t//\tпроврку на ошибки запроса\n\t\t\t\t\t// const error = {\n\t\t\t\t\t// \tstatus: response.status,\n\t\t\t\t\t// };\n\t\t\t\t\t// dispatch(userActions.setFetchingError(error));\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(error.message);\n\t\t\t} finally {\n\t\t\t\tdispatch(eventActions.stopFetching());\n\t\t\t}\n\t\t} else {\n\t\t\tdispatch(eventActions.selectEvent(null));\n\t\t}\n\t},\n\teditEvent: (payload: TEvent) => async (dispatch: Dispatch<any>) => {\n\t\tdispatch(eventActions.startFetching());\n\t\tconst newKey = format(new Date(payload.date), 'P');\n\n\t\ttry {\n\t\t\tconst data = localStorage.getItem('events');\n\t\t\tconst parsedStorageDate: TEvents = data ? JSON.parse(data) : null;\n\n\t\t\tconst oldKey =\n\t\t\t\tparsedStorageDate &&\n\t\t\t\tObject.keys(parsedStorageDate).reduce<string>((acc, el) => {\n\t\t\t\t\tconst arr = parsedStorageDate[el];\n\t\t\t\t\tconst idx = arr.findIndex((el) => el.id === payload.id);\n\t\t\t\t\tif (idx >= 0) {\n\t\t\t\t\t\tacc = el;\n\t\t\t\t\t}\n\t\t\t\t\treturn acc;\n\t\t\t\t}, '');\n\n\t\t\tif (newKey !== oldKey && oldKey && parsedStorageDate) {\n\t\t\t\tconst filteredArr = parsedStorageDate[oldKey].filter(\n\t\t\t\t\t(el) => el.id !== payload.id\n\t\t\t\t);\n\t\t\t\tdelete parsedStorageDate[oldKey];\n\t\t\t\tif (filteredArr.length > 0) parsedStorageDate[oldKey] = filteredArr;\n\n\t\t\t\tif (parsedStorageDate.hasOwnProperty(newKey)) {\n\t\t\t\t\tparsedStorageDate[newKey].push(payload);\n\t\t\t\t} else {\n\t\t\t\t\tparsedStorageDate[newKey] = [payload];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (parsedStorageDate && parsedStorageDate.hasOwnProperty(newKey)) {\n\t\t\t\tconst dailyEventsArr = parsedStorageDate[newKey];\n\t\t\t\tconst indexOfEvent = dailyEventsArr.findIndex(\n\t\t\t\t\t(el) => el.id === payload.id\n\t\t\t\t);\n\t\t\t\tdailyEventsArr[indexOfEvent] = payload;\n\t\t\t\tif (indexOfEvent >= 0) {\n\t\t\t\t\tlocalStorage.setItem('events', JSON.stringify(parsedStorageDate));\n\t\t\t\t\tdispatch(eventActions.editSelectedEvent(parsedStorageDate));\n\t\t\t\t} else {\n\t\t\t\t\t//\tпроврку на ошибки запроса\n\t\t\t\t\t// const error = {\n\t\t\t\t\t// \tstatus: response.status,\n\t\t\t\t\t// };\n\t\t\t\t\t// dispatch(userActions.setFetchingError(error));\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error(error.message);\n\t\t} finally {\n\t\t\tdispatch(eventActions.stopFetching());\n\t\t}\n\t},\n\tcreateEvent: (payload: IInitialValues) => async (dispatch: Dispatch<any>) => {\n\t\tdispatch(eventActions.startFetching());\n\t\tconst parsedPayloadData = {\n\t\t\t[format(payload.date, 'P')]: [\n\t\t\t\t{\n\t\t\t\t\t...payload,\n\t\t\t\t\tid: shortid.generate()\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\n\t\tconst eventKeyArr = Object.keys(parsedPayloadData);\n\t\tconst eventKey = eventKeyArr.length ? eventKeyArr.join() : null;\n\n\t\ttry {\n\t\t\tconst data = localStorage.getItem('events');\n\t\t\tconst parsedStorageDate = data ? JSON.parse(data) : null;\n\n\t\t\tconst isEventExist =\n\t\t\t\tparsedStorageDate &&\n\t\t\t\tObject.keys(parsedStorageDate).some((el) => el === eventKey);\n\n\t\t\tconst processedDate = isEventExist &&\n\t\t\t\teventKey && {\n\t\t\t\t\t...parsedStorageDate,\n\t\t\t\t\t[eventKey]: [\n\t\t\t\t\t\t...parsedStorageDate[eventKey],\n\t\t\t\t\t\t...parsedPayloadData[eventKey]\n\t\t\t\t\t]\n\t\t\t\t};\n\n\t\t\tif (processedDate) {\n\t\t\t\tlocalStorage.setItem('events', JSON.stringify(processedDate));\n\t\t\t\tdispatch(eventActions.add(processedDate));\n\t\t\t} else if (parsedPayloadData) {\n\t\t\t\tlocalStorage.setItem(\n\t\t\t\t\t'events',\n\t\t\t\t\tJSON.stringify({ ...parsedStorageDate, ...parsedPayloadData })\n\t\t\t\t);\n\t\t\t\tdispatch(\n\t\t\t\t\teventActions.add({ ...parsedStorageDate, ...parsedPayloadData })\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t//\tпроврку на ошибки запроса\n\t\t\t\t// const error = {\n\t\t\t\t// \tstatus: response.status,\n\t\t\t\t// };\n\t\t\t\t// dispatch(userActions.setFetchingError(error));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error(error.message);\n\t\t} finally {\n\t\t\tdispatch(eventActions.stopFetching());\n\t\t}\n\t},\n\tdeleteEvent: (payload: TEvent) => async (dispatch: Dispatch<any>) => {\n\t\tdispatch(eventActions.startFetching());\n\t\tconst { id, date } = payload;\n\t\tconst key = format(new Date(date), 'P');\n\n\t\ttry {\n\t\t\tconst data = localStorage.getItem('events');\n\t\t\tconst parsedStorageDate: TEvents = data ? JSON.parse(data) : null;\n\n\t\t\tif (parsedStorageDate && parsedStorageDate.hasOwnProperty(key)) {\n\t\t\t\tconst dailyEventsArr = parsedStorageDate[key];\n\t\t\t\tconst findById = dailyEventsArr.filter((event) => event.id !== id);\n\t\t\t\tparsedStorageDate[key] = findById;\n\t\t\t\tif (findById.length === 0) delete parsedStorageDate[key];\n\t\t\t\tlocalStorage.setItem('events', JSON.stringify(parsedStorageDate));\n\t\t\t\tdispatch(eventActions.sub(parsedStorageDate));\n\t\t\t} else {\n\t\t\t\t//\tпроврку на ошибки запроса\n\t\t\t\t// const error = {\n\t\t\t\t// \tstatus: response.status,\n\t\t\t\t// };\n\t\t\t\t// dispatch(userActions.setFetchingError(error));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error(error.message);\n\t\t} finally {\n\t\t\tdispatch(eventActions.stopFetching());\n\t\t}\n\t}\n});\n","// Core\nimport * as Yup from 'yup';\n\nexport const validationSchema = Yup.object().shape({\n\ttitle: Yup.string().required('Title is required'),\n\tdate: Yup.date().required('Date is required')\n});\n","// -----------------------------------------------------------------------------\n// Deps\n// -----------------------------------------------------------------------------\nimport { createMuiTheme, Theme } from '@material-ui/core';\n// -----------------------------------------------------------------------------\n// Theme\n// -----------------------------------------------------------------------------\nconst fz = '1.5rem';\nexport const theme: Theme = createMuiTheme({\n\toverrides: {\n\t\tMuiFormControl: {\n\t\t\troot: {\n\t\t\t\twidth: '100%',\n\t\t\t\tpaddingBottom: '2rem',\n\t\t\t\tmarginBottom: '.5rem'\n\t\t\t}\n\t\t},\n\t\tMuiFormLabel: {\n\t\t\troot: {\n\t\t\t\tcolor: 'var(--text-main-color)',\n\t\t\t\tfontSize: fz,\n\t\t\t\t'&.Mui-focused:not(.Mui-error)': {\n\t\t\t\t\tcolor: ' var(--secondary)'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tMuiInput: {\n\t\t\troot: {\n\t\t\t\tfontSize: fz\n\t\t\t},\n\t\t\tunderline: {\n\t\t\t\t'&:hover:not(.Mui-disabled):before': {\n\t\t\t\t\tborderBottom: '2px solid var(--secondary)'\n\t\t\t\t},\n\t\t\t\t'&:after': {\n\t\t\t\t\tborderBottom: '1px solid var(--secondary)'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tMuiFormHelperText: {\n\t\t\troot: {\n\t\t\t\tfontSize: '1.2rem',\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: 'calc(100% - 2rem)',\n\t\t\t\tleft: '.5rem'\n\t\t\t}\n\t\t},\n\t\tMuiLinearProgress: {\n\t\t\tbarColorPrimary: {\n\t\t\t\tbackgroundColor: 'var(--secondary)'\n\t\t\t}\n\t\t},\n\t\tMuiInputAdornment: {\n\t\t\troot: {\n\t\t\t\t'& svg': {\n\t\t\t\t\tfill: 'var(--purplish-grey)'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tMuiFormGroup: {\n\t\t\troot: {\n\t\t\t\tjustifyContent: 'space-between',\n\t\t\t\tmargin: '2rem 0 5rem'\n\t\t\t}\n\t\t}\n\t}\n});\n","// -----------------------------------------------------------------------------\n// Deps\n// -----------------------------------------------------------------------------\n// Core\nimport React from 'react';\nimport { TextField } from 'formik-material-ui';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { FormGroup } from '@material-ui/core';\nimport { Formik, Field, Form } from 'formik';\nimport { LinearProgress, Button, InputAdornment } from '@material-ui/core';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport TitleIcon from '@material-ui/icons/Title';\nimport SaveIcon from '@material-ui/icons/Save';\nimport DeleteIcon from '@material-ui/icons/Delete';\n// Components\nimport { TimePicker } from 'Share/Components/Pickers/TimePicker';\nimport { DatePicker } from 'Share/Components/Pickers/DatePicker';\n// Hooks\nimport { useForm } from 'Bus/Calendar/Hooks/useForm';\n// Utils\nimport { initialValues } from './initialValues';\nimport { validationSchema } from './validationSchema';\n// Styles\nimport { theme } from './Theme';\n// -----------------------------------------------------------------------------\n// Current\n// -----------------------------------------------------------------------------\ninterface Values {\n\ttitle: string;\n\tdescription: string;\n}\nconst names: Record<keyof Values, string> = {\n\ttitle: 'title',\n\tdescription: 'description'\n};\n// -----------------------------------------------------------------------------\n// View\n// -----------------------------------------------------------------------------\nexport const View: React.FC = () => {\n\tconst {\n\t\t_event,\n\t\tisDatePickerOpen,\n\t\ttoggleDatePicker,\n\t\tisTimePickerOpen,\n\t\ttoggleTimePicker,\n\t\tselectedDate,\n\t\tselectedTime,\n\t\thandleDateChange,\n\t\thandleTimeChange,\n\t\thandleSubmit,\n\t\thandleDelete\n\t} = useForm();\n\n\treturn (\n\t\t<ThemeProvider theme={theme}>\n\t\t\t<Formik\n\t\t\t\tinitialValues={_event || initialValues}\n\t\t\t\tvalidationSchema={validationSchema}\n\t\t\t\tonSubmit={(values, { setSubmitting }) => {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tsetSubmitting(false);\n\t\t\t\t\t\thandleSubmit(values);\n\t\t\t\t\t}, 500);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{({ submitForm, isSubmitting, setFieldValue }) => (\n\t\t\t\t\t<Form>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tcomponent={TextField}\n\t\t\t\t\t\t\tname={names.title}\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tlabel=\"Title *\"\n\t\t\t\t\t\t\tautoComplete={'off'}\n\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t\tendAdornment: (\n\t\t\t\t\t\t\t\t\t<InputAdornment position=\"start\">\n\t\t\t\t\t\t\t\t\t\t<TitleIcon fontSize=\"large\" />\n\t\t\t\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tcomponent={TextField}\n\t\t\t\t\t\t\taria-label=\"minimum height\"\n\t\t\t\t\t\t\tplaceholder=\"Add some text\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tlabel=\"Description\"\n\t\t\t\t\t\t\tmultiline={true}\n\t\t\t\t\t\t\tname={names.description}\n\t\t\t\t\t\t\tautoComplete={'off'}\n\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t\tendAdornment: (\n\t\t\t\t\t\t\t\t\t<InputAdornment position=\"start\">\n\t\t\t\t\t\t\t\t\t\t<DescriptionIcon fontSize=\"large\" />\n\t\t\t\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<FormGroup row={true}>\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tcomponent={DatePicker}\n\t\t\t\t\t\t\t\tisOpen={isDatePickerOpen}\n\t\t\t\t\t\t\t\tsetIsOpen={toggleDatePicker}\n\t\t\t\t\t\t\t\tselectedDate={selectedDate}\n\t\t\t\t\t\t\t\thandleDateChange={handleDateChange}\n\t\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\n\t\t\t\t\t\t\t\tlabel=\"Date *\"\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tcomponent={TimePicker}\n\t\t\t\t\t\t\t\tisOpen={isTimePickerOpen}\n\t\t\t\t\t\t\t\tsetIsOpen={toggleTimePicker}\n\t\t\t\t\t\t\t\tselectedDate={selectedTime}\n\t\t\t\t\t\t\t\thandleDateChange={handleTimeChange}\n\t\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\n\t\t\t\t\t\t\t\tlabel=\"Time\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</FormGroup>\n\n\t\t\t\t\t\t{!isSubmitting ? (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between',\n\t\t\t\t\t\t\t\t\talignItems: 'center'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\tonClick={submitForm}\n\t\t\t\t\t\t\t\t\tstartIcon={<SaveIcon />}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t\t{_event && (\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\t\tonClick={handleDelete}\n\t\t\t\t\t\t\t\t\t\tstartIcon={<DeleteIcon />}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<LinearProgress />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t</ThemeProvider>\n\t);\n};\n","// -----------------------------------------------------------------------------\n// Deps\n// -----------------------------------------------------------------------------\n// Core\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// Utils\nimport { initialValues } from '../Components/ModalAdapter/Components/Form/initialValues';\n// Actions\nimport { eventActions } from '../actions';\n// Types\nimport { TRootReducer } from 'Init/rootReducer';\nimport { TEvent } from '../Types';\n// -----------------------------------------------------------------------------\n// Hook\n// -----------------------------------------------------------------------------\nexport const useForm = () => {\n\tconst { event } = useSelector((state: TRootReducer) => state.eventReducer);\n\tconst _event = event as TEvent;\n\tconst dispatch = useDispatch();\n\tconst [isDatePickerOpen, toggleDatePicker] = useState<boolean>(false);\n\tconst [isTimePickerOpen, toggleTimePicker] = useState<boolean>(false);\n\tconst [selectedDate, toggleSelectedDate] = useState<Date>(\n\t\t_event?.date ? _event.date : initialValues.date\n\t);\n\tconst [selectedTime, toggleSelectedTime] = useState<Date>(\n\t\t_event?.time ? _event.time : initialValues.time\n\t);\n\n\tconst handleDateChange = (date: Date) => {\n\t\ttoggleSelectedDate(date);\n\t};\n\tconst handleTimeChange = (date: Date) => {\n\t\ttoggleSelectedTime(date);\n\t};\n\n\tconst handleSubmit = (values: TEvent) => {\n\t\tif (!_event) {\n\t\t\tdispatch(eventActions.createEvent(values));\n\t\t} else {\n\t\t\tdispatch(eventActions.editEvent(values));\n\t\t}\n\t};\n\n\tconst handleDelete = () => {\n\t\tdispatch(eventActions.deleteEvent(_event));\n\t};\n\treturn {\n\t\t_event,\n\t\tisDatePickerOpen,\n\t\ttoggleDatePicker,\n\t\tisTimePickerOpen,\n\t\ttoggleTimePicker,\n\t\tselectedDate,\n\t\tselectedTime,\n\t\thandleDateChange,\n\t\thandleTimeChange,\n\t\thandleSubmit,\n\t\thandleDelete\n\t};\n};\n","// -----------------------------------------------------------------------------\n// Deps\n// -----------------------------------------------------------------------------\n// Core\nimport React from 'react';\nimport { Backdrop, Fade, IconButton, Modal, Typography } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n// Components\nimport { Form } from './Components/Form';\n// Styles\nimport Styles from './Styles.module.scss';\n// Types\n// -----------------------------------------------------------------------------\n// Current\n// -----------------------------------------------------------------------------\ninterface ICurrentProps {\n\tisModalOpen: boolean;\n\thandleClose(): void;\n\theading?: string;\n}\n// -----------------------------------------------------------------------------\n// View\n// -----------------------------------------------------------------------------\nexport const View: React.FC<ICurrentProps> = ({\n\tisModalOpen,\n\thandleClose,\n\theading = 'Add New Item'\n}) => (\n\t<Modal\n\t\taria-labelledby=\"transition-modal-title\"\n\t\taria-describedby=\"transition-modal-description\"\n\t\tclassName={Styles.modal}\n\t\topen={isModalOpen}\n\t\tonClose={handleClose}\n\t\tcloseAfterTransition\n\t\tBackdropComponent={Backdrop}\n\t\tBackdropProps={{\n\t\t\ttimeout: 500\n\t\t}}\n\t>\n\t\t<Fade in={isModalOpen}>\n\t\t\t<div className={Styles.modal__paper}>\n\t\t\t\t<header className={Styles.modal__header}>\n\t\t\t\t\t<Typography variant=\"h4\">{heading}</Typography>\n\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tcolor=\"default\"\n\t\t\t\t\t\taria-label=\"add new event\"\n\t\t\t\t\t\tonClick={handleClose}\n\t\t\t\t\t>\n\t\t\t\t\t\t<CloseIcon fontSize=\"large\" />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</header>\n\t\t\t\t<main className={Styles.modal__main}>\n\t\t\t\t\t<MuiPickersUtilsProvider utils={DateFnsUtils}>\n\t\t\t\t\t\t<Form />\n\t\t\t\t\t</MuiPickersUtilsProvider>\n\t\t\t\t</main>\n\t\t\t</div>\n\t\t</Fade>\n\t</Modal>\n);\n","// -----------------------------------------------------------------------------\n// Deps\n// -----------------------------------------------------------------------------\n// Core\nimport React from 'react';\nimport { add, sub } from 'date-fns';\n// -----------------------------------------------------------------------------\n// Hook\n// -----------------------------------------------------------------------------\nexport const useHandlers = (\n\tsetSelectedDate: React.Dispatch<React.SetStateAction<Date | null>>\n) => {\n\tconst handleDateChange = (date: Date | null) => {\n\t\tsetSelectedDate(date);\n\t};\n\n\tconst setPrevMonth = () => {\n\t\tsetSelectedDate((prev) => sub(prev as Date, { months: 1 }));\n\t};\n\n\tconst setNextMonth = () => {\n\t\tsetSelectedDate((prev) => add(prev as Date, { months: 1 }));\n\t};\n\n\tconst handleGridClick = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n\t\tconst target = e.currentTarget as HTMLElement;\n\t\tconst date = new Date(target.dataset.date as string);\n\t\tsetSelectedDate(date);\n\t};\n\n\treturn {\n\t\thandleDateChange,\n\t\tsetPrevMonth,\n\t\tsetNextMonth,\n\t\thandleGridClick\n\t};\n};\n","// -----------------------------------------------------------------------------\n// Deps\n// -----------------------------------------------------------------------------\n// Core\nimport React from 'react';\nimport { format, isSameDay } from 'date-fns';\nimport cx from 'classnames';\n// Components\nimport { Events } from './Elements/Events';\nimport { ModalAdapter } from '../ModalAdapter';\n// Hooks\nimport { useHandlers } from 'Bus/Calendar/Hooks/useHandlers';\nimport { useSelectedEvent } from 'Bus/Calendar/Hooks/useSelectedEvent';\n// Styles\nimport Styles from './Styles.module.scss';\n//Types\nimport { TEvents } from 'Bus/Calendar/Types';\n// -----------------------------------------------------------------------------\n// Current\n// -----------------------------------------------------------------------------\ninterface ICurrentProps {\n\tprevMonthArr: Date[];\n\tselectedMonthArr: Date[];\n\tnextMonthArr: Date[];\n\tsetSelectedDate: React.Dispatch<React.SetStateAction<Date | null>>;\n\tselectedDay: number;\n\tevents: TEvents;\n}\n// -----------------------------------------------------------------------------\n// View\n// -----------------------------------------------------------------------------\nexport const View: React.FC<ICurrentProps> = ({\n\tprevMonthArr,\n\tselectedMonthArr,\n\tnextMonthArr,\n\tsetSelectedDate,\n\tselectedDay,\n\tevents\n}) => {\n\tconst { handleGridClick } = useHandlers(setSelectedDate);\n\n\tconst {\n\t\tisModalOpen,\n\t\thandleClose,\n\t\teventsDateArr,\n\t\teventClickHolder\n\t} = useSelectedEvent(events);\n\n\treturn (\n\t\t<>\n\t\t\t{prevMonthArr.map((day) => (\n\t\t\t\t<div\n\t\t\t\t\tkey={String(day.getTime())}\n\t\t\t\t\tclassName={cx(Styles.grid__date, Styles['grid__date--prev'])}\n\t\t\t\t\tdata-date={day}\n\t\t\t\t\tonClick={(e) => handleGridClick(e)}\n\t\t\t\t>\n\t\t\t\t\t<header className={cx(Styles['grid__header'])}>\n\t\t\t\t\t\t<span className={cx(Styles['grid__day'])}>\n\t\t\t\t\t\t\t{format(day, 'EEEEEE')}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className={cx(Styles['grid__num'])}>\n\t\t\t\t\t\t\t{format(day, 'd')}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</header>\n\n\t\t\t\t\t<Events\n\t\t\t\t\t\tday={day}\n\t\t\t\t\t\tevents={events}\n\t\t\t\t\t\teventsDateArr={eventsDateArr}\n\t\t\t\t\t\teventClickHolder={eventClickHolder}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t))}\n\t\t\t{selectedMonthArr.map((day, idx) => {\n\t\t\t\treturn (\n\t\t\t\t\t<div\n\t\t\t\t\t\tkey={String(day.getTime())}\n\t\t\t\t\t\tclassName={cx(Styles.grid__date, Styles['grid__date--current'], {\n\t\t\t\t\t\t\t[Styles['grid__date--selected']]: selectedDay === idx + 1\n\t\t\t\t\t\t})}\n\t\t\t\t\t\tdata-date={day}\n\t\t\t\t\t\tonClick={(e) => handleGridClick(e)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<header className={cx(Styles['grid__header'])}>\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\tclassName={cx(Styles['grid__day'], {\n\t\t\t\t\t\t\t\t\t[Styles['grid__day--today']]: isSameDay(\n\t\t\t\t\t\t\t\t\t\tday,\n\t\t\t\t\t\t\t\t\t\tnew Date()\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{format(day, 'EEEEEE')}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span className={cx(Styles['grid__num'])}>\n\t\t\t\t\t\t\t\t{format(day, 'd')}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</header>\n\n\t\t\t\t\t\t<Events\n\t\t\t\t\t\t\tday={day}\n\t\t\t\t\t\t\tevents={events}\n\t\t\t\t\t\t\teventsDateArr={eventsDateArr}\n\t\t\t\t\t\t\teventClickHolder={eventClickHolder}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t})}\n\t\t\t{nextMonthArr.map((day) => (\n\t\t\t\t<div\n\t\t\t\t\tkey={String(day.getTime())}\n\t\t\t\t\tclassName={cx(Styles.grid__date, Styles['grid__date--next'])}\n\t\t\t\t\tdata-date={day}\n\t\t\t\t\tonClick={(e) => handleGridClick(e)}\n\t\t\t\t>\n\t\t\t\t\t<header className={cx(Styles['grid__header'])}>\n\t\t\t\t\t\t<span className={cx(Styles['grid__day'])}>\n\t\t\t\t\t\t\t{format(day, 'EEEEEE')}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className={cx(Styles['grid__date-num'])}>\n\t\t\t\t\t\t\t{format(day, 'd')}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</header>\n\n\t\t\t\t\t<Events\n\t\t\t\t\t\tday={day}\n\t\t\t\t\t\tevents={events}\n\t\t\t\t\t\teventsDateArr={eventsDateArr}\n\t\t\t\t\t\teventClickHolder={eventClickHolder}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t))}\n\t\t\t<ModalAdapter\n\t\t\t\tisModalOpen={isModalOpen}\n\t\t\t\thandleClose={handleClose}\n\t\t\t\theading=\"Edit Event\"\n\t\t\t/>\n\t\t</>\n\t);\n};\n","// -----------------------------------------------------------------------------\n// Deps\n// -----------------------------------------------------------------------------\n// Core\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n// Actions\nimport { eventActions } from '../actions';\n// Types\nimport { TEvents } from '../Types';\n// -----------------------------------------------------------------------------\n// Hook\n// -----------------------------------------------------------------------------\nexport const useSelectedEvent = (events: TEvents) => {\n\tconst dispatch = useDispatch();\n\tconst [isModalOpen, toggleModalOpen] = useState(false);\n\n\tconst handleClose = () => {\n\t\tdispatch(eventActions.getEvent(null));\n\t\ttoggleModalOpen(false);\n\t};\n\tconst eventsDateArr = events && Object.keys(events).map((key) => new Date(key));\n\n\tconst eventClickHolder = (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n\t\tconst target = e.target as HTMLElement;\n\t\tdispatch(\n\t\t\teventActions.getEvent({\n\t\t\t\tkey: target.dataset.date as string,\n\t\t\t\tid: target.id\n\t\t\t})\n\t\t);\n\t\ttoggleModalOpen(true);\n\t};\n\treturn {\n\t\tisModalOpen,\n\t\thandleClose,\n\t\teventsDateArr,\n\t\teventClickHolder\n\t};\n};\n","// -----------------------------------------------------------------------------\n// Deps\n// -----------------------------------------------------------------------------\n// Core\nimport { useState } from 'react';\nimport {\n\tadd,\n\teachDayOfInterval,\n\tgetDate,\n\tlastDayOfMonth,\n\tstartOfMonth,\n\tsub\n} from 'date-fns';\n// Hooks\nimport { useQuery } from './useQuery';\nimport { useFilter } from './useFilter';\n// Utils\nimport { getPrevMonthArr } from 'Utils/prev_month';\nimport { getNextMonthArr } from 'Utils/next_month';\n// -----------------------------------------------------------------------------\n// Hook\n// -----------------------------------------------------------------------------\nexport const useValues = () => {\n\tconst query = useQuery();\n\tconst queryDate = query.get('date');\n\tconst [isOpen, setIsOpen] = useState(false);\n\tconst [selectedDate, setSelectedDate] = useState<Date | null>(\n\t\tqueryDate ? new Date(query.get('date') as string) : new Date()\n\t);\n\n\tuseFilter(selectedDate);\n\n\tconst selectedDay = getDate(selectedDate as Date);\n\tconst startOfSelectedMonth = startOfMonth(selectedDate as Date);\n\tconst endOfSelectedMonth = lastDayOfMonth(selectedDate as Date);\n\tconst selectedMonthArr = eachDayOfInterval({\n\t\tstart: startOfSelectedMonth,\n\t\tend: endOfSelectedMonth\n\t});\n\n\tconst prevMonth = sub(selectedDate as Date, { months: 1 });\n\tconst prevMonthArr = getPrevMonthArr(startOfSelectedMonth.getDay(), prevMonth);\n\n\tconst daysCount = selectedMonthArr.length + prevMonthArr.length;\n\n\tconst nextMonth = add(selectedDate as Date, { months: 1 });\n\tconst nextMonthArr = getNextMonthArr(\n\t\tendOfSelectedMonth.getDay(),\n\t\tnextMonth,\n\t\tdaysCount\n\t);\n\n\treturn {\n\t\tisOpen,\n\t\tsetIsOpen,\n\t\tselectedDate,\n\t\tsetSelectedDate,\n\t\tprevMonthArr,\n\t\tselectedMonthArr,\n\t\tnextMonthArr,\n\t\tselectedDay\n\t};\n};\n","// -----------------------------------------------------------------------------\n// Deps\n// -----------------------------------------------------------------------------\n// Core\nimport { useLocation } from 'react-router-dom';\n// -----------------------------------------------------------------------------\n// Hook\n// -----------------------------------------------------------------------------\nexport const useQuery = () => {\n\treturn new URLSearchParams(useLocation().search);\n};\n","// -----------------------------------------------------------------------------\n// Deps\n// -----------------------------------------------------------------------------\n// Core\nimport { useHistory } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { format } from 'date-fns';\n// -----------------------------------------------------------------------------\n// Hook\n// -----------------------------------------------------------------------------\nexport const useFilter = (selectedDate: Date | null) => {\n\tconst history = useHistory();\n\n\tuseEffect(() => {\n\t\tif (selectedDate) {\n\t\t\thistory.push({\n\t\t\t\tpathname: '/calendar',\n\t\t\t\tsearch: `?date=${String(format(selectedDate as Date, 'P'))}`\n\t\t\t});\n\t\t}\n\t}, [history, selectedDate]);\n};\n","// -----------------------------------------------------------------------------\n// Deps\n// -----------------------------------------------------------------------------\n//Core\nimport { getDaysInMonth, getMonth, getYear } from 'date-fns';\n// -----------------------------------------------------------------------------\n// Helpers\n// -----------------------------------------------------------------------------\nconst getNumberOfPrevMonth = (num: number) => {\n\tif (num === 0) {\n\t\treturn 6;\n\t} else {\n\t\treturn num - 1;\n\t}\n};\n\nexport const getPrevMonthArr = (sub: number, month: Date) => {\n\tconst daysInMonth = getDaysInMonth(month);\n\tconst arr: Date[] = [];\n\tfor (let i = getNumberOfPrevMonth(sub); i > 0; i--) {\n\t\tconst date = new Date(getYear(month), getMonth(month), daysInMonth - i + 1);\n\t\tarr.push(date);\n\t}\n\treturn arr;\n};\n","// -----------------------------------------------------------------------------\n// Deps\n// -----------------------------------------------------------------------------\n//Core\nimport { getMonth, getYear } from 'date-fns';\n// Utils\nimport { CALENDAR_CEIL_COUNT } from '../Constants/calendar';\n// -----------------------------------------------------------------------------\n// Helpers\n// -----------------------------------------------------------------------------\nconst getNumberOfNextMonth = (num: number) => {\n\treturn CALENDAR_CEIL_COUNT - num;\n};\n\nexport const getNextMonthArr = (add: number, month: Date, daysCount: number) => {\n\tconst arr: Date[] = [];\n\tfor (let i = 1; i <= getNumberOfNextMonth(daysCount); i++) {\n\t\tconst date = new Date(getYear(month), getMonth(month), i);\n\t\tarr.push(date);\n\t}\n\treturn arr;\n};\n","export const CALENDAR_CEIL_COUNT = 42;","// -----------------------------------------------------------------------------\n// Deps\n// -----------------------------------------------------------------------------\n// Core\nimport React from 'react';\nimport { format } from 'date-fns';\nimport { IconButton } from '@material-ui/core';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport AddIcon from '@material-ui/icons/Add';\n// Components\nimport { DatePicker } from 'Share/Components/Pickers/DatePicker';\nimport { CalendarGrid } from '../Components/CalendarGrid';\n// Hooks\nimport { useValues } from '../Hooks/useValues';\nimport { useHandlers } from '../Hooks/useHandlers';\nimport { ModalAdapter } from '../Components/ModalAdapter';\nimport { useInitialEvents } from '../Hooks/useInitialEvents';\nimport { useNewEvent } from '../Hooks/useNewEvent';\n// Styles\nimport Styles from './Styles.module.scss';\n// -----------------------------------------------------------------------------\n// View\n// -----------------------------------------------------------------------------\nexport const View: React.FC = () => {\n\tconst { events } = useInitialEvents();\n\tconst {\n\t\tisOpen,\n\t\tsetIsOpen,\n\t\tselectedDate,\n\t\tsetSelectedDate,\n\t\tprevMonthArr,\n\t\tselectedMonthArr,\n\t\tnextMonthArr,\n\t\tselectedDay\n\t} = useValues();\n\tconst { handleDateChange, setPrevMonth, setNextMonth } = useHandlers(setSelectedDate);\n\n\tconst { isModalOpen, handleOpen, handleClose } = useNewEvent();\n\n\treturn (\n\t\t<section className={Styles.calendar}>\n\t\t\t<header className={Styles['calendar__header']}>\n\t\t\t\t<div className=\"calendar__new-event\">\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tcolor=\"default\"\n\t\t\t\t\t\taria-label=\"add new event\"\n\t\t\t\t\t\tonClick={handleOpen}\n\t\t\t\t\t>\n\t\t\t\t\t\t<AddIcon fontSize=\"large\" />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</div>\n\t\t\t\t<div className={Styles['calendar__switcher']}>\n\t\t\t\t\t<div className={Styles['calendar__month']}>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tcolor=\"default\"\n\t\t\t\t\t\t\taria-label=\"add to shopping cart\"\n\t\t\t\t\t\t\tonClick={setPrevMonth}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ChevronLeftIcon fontSize=\"large\" />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t<div className={Styles['calendar__month-title']}>\n\t\t\t\t\t\t\t{format(selectedDate as Date, 'MMMM yyyy')}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tcolor=\"default\"\n\t\t\t\t\t\t\taria-label=\"add to shopping cart\"\n\t\t\t\t\t\t\tonClick={setNextMonth}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ChevronRightIcon fontSize=\"large\" />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={Styles['calendar__datepicker']}>\n\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\tisOpen={isOpen}\n\t\t\t\t\t\t\tsetIsOpen={setIsOpen}\n\t\t\t\t\t\t\tselectedDate={selectedDate}\n\t\t\t\t\t\t\thandleDateChange={handleDateChange}\n\t\t\t\t\t\t\tonlyIcon\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</header>\n\t\t\t<main className={Styles['calendar__days']}>\n\t\t\t\t<CalendarGrid\n\t\t\t\t\tevents={events}\n\t\t\t\t\tprevMonthArr={prevMonthArr}\n\t\t\t\t\tselectedMonthArr={selectedMonthArr}\n\t\t\t\t\tnextMonthArr={nextMonthArr}\n\t\t\t\t\tsetSelectedDate={setSelectedDate}\n\t\t\t\t\tselectedDay={selectedDay}\n\t\t\t\t/>\n\t\t\t</main>\n\t\t\t<ModalAdapter isModalOpen={isModalOpen} handleClose={handleClose} />\n\t\t</section>\n\t);\n};\n","// -----------------------------------------------------------------------------\n// Deps\n// -----------------------------------------------------------------------------\n// Core\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { eventActions } from '../actions';\n// Types\nimport { TRootReducer } from 'Init/rootReducer';\n// -----------------------------------------------------------------------------\n// Hook\n// -----------------------------------------------------------------------------\nexport const useInitialEvents = () => {\n\tconst dispatch = useDispatch();\n\tconst { events } = useSelector((state: TRootReducer) => state.eventReducer);\n\n\tuseEffect(() => {\n\t\tif (events === null) {\n\t\t\tdispatch(eventActions.getEvents());\n\t\t}\n\t}, [dispatch]);\n\n\treturn {\n\t\tevents\n\t};\n};\n","// -----------------------------------------------------------------------------\n// Deps\n// -----------------------------------------------------------------------------\n// Core\nimport { useState } from 'react';\n// -----------------------------------------------------------------------------\n// Hook\n// -----------------------------------------------------------------------------\nexport const useNewEvent = () => {\n\tconst [isModalOpen, toggleModal] = useState<boolean>(false);\n\n\tconst handleOpen = () => toggleModal(true);\n\n\tconst handleClose = () => toggleModal(false);\n\n\treturn {\n\t\tisModalOpen,\n\t\thandleOpen,\n\t\thandleClose\n\t};\n};\n","// -----------------------------------------------------------------------------\n// Deps\n// -----------------------------------------------------------------------------\n// Core\nimport React from 'react';\nimport { Provider } from 'react-redux';\n// Init\nimport { store } from 'Init/store';\nimport { Calendar } from 'Bus/Calendar';\n// Styles\nimport Styles from './Styles.module.scss';\n// -----------------------------------------------------------------------------\n// View\n// -----------------------------------------------------------------------------\nexport const Scheduler = () => {\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<div className={Styles.container}>\n\t\t\t\t<Calendar />\n\t\t\t</div>\n\t\t</Provider>\n\t);\n};\n","// -----------------------------------------------------------------------------\n// Deps\n// -----------------------------------------------------------------------------\n// Core\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n// Components\nimport { Scheduler } from './Layouts/Scheduler/Scheduler';\n// Store\nimport { store } from 'Init/store';\n// Styles\nimport 'Styles/main.scss';\n// -----------------------------------------------------------------------------\n// View\n// -----------------------------------------------------------------------------\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<Router>\n\t\t\t<Scheduler />\n\t\t</Router>\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calendar\":\"Styles_calendar__1jlsu\",\"calendar__header\":\"Styles_calendar__header__3-7q2\",\"calendar__switcher\":\"Styles_calendar__switcher__26a0p\",\"calendar__month\":\"Styles_calendar__month__2d5yW\",\"calendar__month-title\":\"Styles_calendar__month-title__3oJtL\",\"calendar__datepicker\":\"Styles_calendar__datepicker__1cIpz\",\"calendar__days\":\"Styles_calendar__days__9mvyA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Styles_modal__81t81\",\"modal__paper\":\"Styles_modal__paper__2-WkW\",\"modal__header\":\"Styles_modal__header__IkaDn\"};"],"sourceRoot":""}